{"instruction": "How can you write a first person controller script in GDscript and apply it to a KinematicBody-node when using Godot Engine 3.x and what is the equivalent to the KinematicBody-node in Godot Engine 4.x and how does the first person controller script need to be changed to work in Godot Engine 4.x?", "output": "In Godot Engine 3.x, a first-person controller script can be written in GDScript as follows:\n\n```gdscript\nextends KinematicBody\n\nvar velocity = Vector3()\nvar movement_speed = 10.0\n\nfunc _physics_process(delta):\n    velocity = velocity.linear_interpolate(Vector3.ZERO, movement_speed * delta)\n    translate(velocity * delta)\n```\n\nThis script is attached to a KinematicBody-node, which is a node that can be moved using physics. The script calculates the velocity of the node and moves it based on that velocity. The `movement_speed` variable determines how fast the node moves.\n\nIn Godot Engine 4.x, the equivalent to the KinematicBody-node is the `PhysicsBody` node. The first-person controller script needs to be changed to work with this new node as follows:\n\n```gdscript\nextends PhysicsBody\n\nvar velocity = Vector3()\nvar movement_speed = 10.0\n\nfunc _physics_process(delta):\n    velocity = velocity.linear_interpolate(Vector3.ZERO, movement_speed * delta)\n    translate(velocity * delta)\n```\n\nThe only change is the replacement of `KinematicBody` with `PhysicsBody`. The rest of the script remains the same. The `PhysicsBody` node also allows the node to be moved using physics, just like the KinematicBody-node in Godot Engine 3.x.\n\nNote that in Godot Engine 4.x, the `PhysicsBody` node is automatically added to the scene tree when you add a `KinematicBody` node in Godot Engine 3.x. So, you don't need to manually add the `PhysicsBody` node in Godot Engine 4.x.", "generator": "./save_merge_models/instruct_math/instruct/mask_merging/average_merging/mask_0.2_0.2_rescale_True", "dataset": "oasst"}
