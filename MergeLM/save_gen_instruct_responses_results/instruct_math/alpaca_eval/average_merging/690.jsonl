{"instruction": "As part of software engineering, user stories describe what the user wants the system to do, while acceptance criteria describe the conditions a specific user story must meet. Create basic acceptance criteria based on the given user story.\n\nUser story: As a user, I want to use a search field to type a city, name, or street, so that I could find matching hotel options.", "output": "Acceptance criteria for the user story:\n\n1. The search field should be prominently displayed on the hotel booking website.\n2. The search field should accept input in the form of a city, name, or street.\n3. The search field should have a minimum length of 3 characters.\n4. The search field should have a maximum length of 50 characters.\n5. The search field should have a clear and concise label, such as \"Search by city, name, or street\".\n6. The search field should have a button or icon to initiate the search process.\n7. The search process should return hotel options that match the input in the search field.\n8. The search results should be displayed in a clear and organized manner, such as a list or grid.\n9. The search results should include the name of the hotel, its location, and a brief description.\n10. The search results should include a link to the hotel's details page, where the user can book a room or learn more about the hotel.\n11. The search results should be paginated, with clear links to the previous and next pages.\n12. The search results should be sorted by relevance to the input in the search field.\n13. The search results should be updated in real-time as the user types in the search field.\n14. The search field should have a clear error message if the input is invalid or does not match any hotel options.\n15. The search field should have a clear success message if the input matches hotel options.\n\nThese acceptance criteria ensure that the search field and search process meet the user's needs and expectations for finding hotel options based on their input.", "generator": "./save_merge_models/instruct_math/instruct/average_merging", "dataset": "selfinstruct"}
